// mock 接口数据
export const mockService = {
  // 代码扫描结果
  getScaningProblem() {
    return [
      {
        annotation: {},
        checkSuite: {
          checkRuns: [
            {
              annotations: [
                {
                  bugId: '172261039',
                  bugType: 'BE8034',
                  bugTypeName: 'Hard code access key',
                  checkRunId: 32814683,
                  details:
                    '源文件发现硬编码明文账密: "ACCESSSECRET" : "XuixzcoxU56iSrNbhm8Wz2WH1DkjmO"',
                  endCol: 0,
                  endLine: 22,
                  feedBackStatus: 'Init',
                  feedBackUser: {
                    avatarUrl: 'https://work.antfinancial-corp.com/photo/249871.80x80.jpg',
                    email: 'yongda.cyd@antgroup.com',
                    externUid: '249871',
                    id: 48448,
                    name: '鲁猫',
                    state: 'active',
                    username: 'yongda.cyd',
                    webUrl: 'https://work.antfinancial-corp.com/nwpipe/u/249871',
                  },
                  feedBackUserId: 48448,
                  id: 18402298,
                  level: 'Failure',
                  message:
                    '源文件发现硬编码明文账密: "<span style="color:red">ACCESSSECRET</span>" : "<span style="color:red">XuixzcoxU56iSrNbhm8Wz2WH1DkjmO</span>"<br/>不符合《[蚂蚁金服密钥口令安全管理规范](https://developer.alipay.com/processfile/devKb/sggf2g)》',
                  path: 'aaa/package.json',
                  startCol: 0,
                  startLine: 22,
                  title: '硬编码Access Key',
                },
                {
                  bugId: '172261040',
                  bugType: 'BE8034',
                  bugTypeName: 'Hard code access key',
                  checkRunId: 32814683,
                  details:
                    '源文件发现硬编码明文账密: "ACCESSSECRET" : "XuixzcoxU56iSrNbhm8Wz2WH1DkjmO"',
                  endCol: 0,
                  endLine: 26,
                  feedBackStatus: 'Init',
                  feedBackUser: {
                    avatarUrl: 'https://work.antfinancial-corp.com/photo/249871.80x80.jpg',
                    email: 'yongda.cyd@antgroup.com',
                    externUid: '249871',
                    id: 48448,
                    name: '鲁猫',
                    state: 'active',
                    username: 'yongda.cyd',
                    webUrl: 'https://work.antfinancial-corp.com/nwpipe/u/249871',
                  },
                  feedBackUserId: 48448,
                  id: 18402299,
                  level: 'Failure',
                  message:
                    '源文件发现硬编码明文账密: "<span style="color:red">ACCESSSECRET</span>" : "<span style="color:red">XuixzcoxU56iSrNbhm8Wz2WH1DkjmO</span>"<br/>不符合《[蚂蚁金服密钥口令安全管理规范](https://developer.alipay.com/processfile/devKb/sggf2g)》',
                  path: 'src/config/passport.ts',
                  startCol: 0,
                  startLine: 26,
                  title: '硬编码Access Key',
                },
                {
                  bugId: '172261041',
                  bugType: 'BE8034',
                  bugTypeName: 'Hard code access key',
                  checkRunId: 32814683,
                  details:
                    '源文件发现硬编码明文账密: "ACCESSSECRET" : "XuixzcoxU56iSrNbhm8Wz2WH1DkjmO"',
                  endCol: 0,
                  endLine: 22,
                  feedBackStatus: 'Init',
                  feedBackUser: {
                    avatarUrl: 'https://work.antfinancial-corp.com/photo/249871.80x80.jpg',
                    email: 'yongda.cyd@antgroup.com',
                    externUid: '249871',
                    id: 48448,
                    name: '鲁猫',
                    state: 'active',
                    username: 'yongda.cyd',
                    webUrl: 'https://work.antfinancial-corp.com/nwpipe/u/249871',
                  },
                  feedBackUserId: 48448,
                  id: 18402300,
                  level: 'Failure',
                  message:
                    '源文件发现硬编码明文账密: "<span style="color:red">ACCESSSECRET</span>" : "<span style="color:red">XuixzcoxU56iSrNbhm8Wz2WH1DkjmO</span>"<br/>不符合《[蚂蚁金服密钥口令安全管理规范](https://developer.alipay.com/processfile/devKb/sggf2g)》',
                  path: 'test0315.java',
                  startCol: 0,
                  startLine: 22,
                  title: '硬编码Access Key',
                },
                {
                  bugId: '172261042',
                  bugType: 'BE8034',
                  bugTypeName: 'Hard code access key',
                  checkRunId: 32814683,
                  details:
                    '源文件发现硬编码明文账密: "ACCESSSECRET" : "fFc3rGhaDMgbHtN6EGLirC4DRWWmhg"',
                  endCol: 0,
                  endLine: 21,
                  feedBackStatus: 'Init',
                  feedBackUser: {
                    avatarUrl: 'https://work.antfinancial-corp.com/photo/249871.80x80.jpg',
                    email: 'yongda.cyd@antgroup.com',
                    externUid: '249871',
                    id: 48448,
                    name: '鲁猫',
                    state: 'active',
                    username: 'yongda.cyd',
                    webUrl: 'https://work.antfinancial-corp.com/nwpipe/u/249871',
                  },
                  feedBackUserId: 48448,
                  id: 18402301,
                  level: 'Failure',
                  message:
                    '源文件发现硬编码明文账密: "<span style="color:red">ACCESSSECRET</span>" : "<span style="color:red">fFc3rGhaDMgbHtN6EGLirC4DRWWmhg</span>"<br/>不符合《[蚂蚁金服密钥口令安全管理规范](https://developer.alipay.com/processfile/devKb/sggf2g)》',
                  path: 'test0317.java',
                  startCol: 0,
                  startLine: 21,
                  title: '硬编码Access Key',
                },
                {
                  bugId: '172261044',
                  bugType: 'BE8034',
                  bugTypeName: 'Hard code access key',
                  checkRunId: 32814683,
                  details:
                    '源文件发现硬编码明文账密: "ACCESSSECRET" : "XuixzcoxU56iSrNbhm8Wz2WH1DkjmO"',
                  endCol: 0,
                  endLine: 19,
                  feedBackStatus: 'Init',
                  feedBackUser: {
                    avatarUrl: 'https://work.antfinancial-corp.com/photo/249871.80x80.jpg',
                    email: 'yongda.cyd@antgroup.com',
                    externUid: '249871',
                    id: 48448,
                    name: '鲁猫',
                    state: 'active',
                    username: 'yongda.cyd',
                    webUrl: 'https://work.antfinancial-corp.com/nwpipe/u/249871',
                  },
                  feedBackUserId: 48448,
                  id: 18402302,
                  level: 'Failure',
                  message:
                    '源文件发现硬编码明文账密: "<span style="color:red">ACCESSSECRET</span>" : "<span style="color:red">XuixzcoxU56iSrNbhm8Wz2WH1DkjmO</span>"<br/>不符合《[蚂蚁金服密钥口令安全管理规范](https://developer.alipay.com/processfile/devKb/sggf2g)》',
                  path: 'bugs.java',
                  startCol: 0,
                  startLine: 19,
                  title: '硬编码Access Key',
                },
              ],
              completedAt: '2021-09-14T18:03:39+0800',
              context:
                '\n<span style="color: rgb(251, 103, 58);">🔴 失败</span>: 5 <span style="color: rgb(250, 140, 22);"> 🟠️ 警告</span>: 0 <span style="color: rgb(250, 173, 20);"> ⚪ 通知</span>: 0\n\n已扫描项:\n- 硬编码Access Key &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: green;">完成</span>, 发现5个失败级别风险&nbsp;&nbsp;\n\n',
              createdAt: '2021-09-14T18:02:51+0800',
              detailUrl: '',
              externalId: '186602538',
              id: 32814683,
              startedAt: '2021-09-14T18:02:51+0800',
              status: 'fail',
              suiteId: 32348046,
              summary: '扫描任务执行完成，发现 5 个结果',
              title: 'AntCode CR 增量扫描',
              updatedAt: '2021-09-14T18:03:40+0800',
              conclusion: '',
            },
            {
              annotations: [
                {
                  bugId: null,
                  bugType: null,
                  bugTypeName: null,
                  checkRunId: 6859915,
                  details: '发现邮件地址',
                  endCol: 0,
                  endLine: 8,
                  feedBackStatus: 'Init',
                  feedBackUser: null,
                  feedBackUserId: null,
                  id: 1593269,
                  level: 'Warning',
                  message:
                    '推测 "<span style="color:red">kaitian.typescript-basics@1.51.1-patch.1</span>" 是邮件地址，可能导致信息泄露<div><span>[【标为确认】](https://codeinsightapi.alipay.com/api/v1/review?review=Confirm&fingerprint=56eb887b589102e1f5aa50d96f4637ff19c0fdf4&report_id=123011035610&scan_record_id=68810564&__codeinsight_body_salt__=o5CnV88uqiW8FkqM3mFf7w&__codeinsight_body_signature__=5c46baad56ba722d5c59a8260bc16ceb0edbcb02ff3241190aabcc16685cbbaa)</span><span>[【标为忽略】](https://codeinsightapi.alipay.com/api/v1/review?review=Ignore&fingerprint=56eb887b589102e1f5aa50d96f4637ff19c0fdf4&report_id=123011035610&scan_record_id=68810564&__codeinsight_body_salt__=6Yt3Ox3orFr-uNlCVbmpHA&__codeinsight_body_signature__=05cd70fdf1a1230d7c4ebd9eb28f9e8e09eb98847800ff408f4fdeb1ca6a9941)</span><span>[【标为误报】](https://codeinsightapi.alipay.com/api/v1/review?review=FalsePositive&fingerprint=56eb887b589102e1f5aa50d96f4637ff19c0fdf4&report_id=123011035610&scan_record_id=68810564&__codeinsight_body_salt__=xDiNqnkiJ4WXaGsNNdKISQ&__codeinsight_body_signature__=4156bf822dd3de24b774cc1f4a67a0731ff4ebb86b888565afd629a361e30245)</span></div>',
                  path: '.ext.config.js',
                  startCol: 0,
                  startLine: 8,
                  title: '源文件硬编码邮箱地址',
                },
                {
                  bugId: null,
                  bugType: null,
                  bugTypeName: null,
                  checkRunId: 6859915,
                  details: '发现邮件地址',
                  endCol: 0,
                  endLine: 27,
                  feedBackStatus: 'Init',
                  feedBackUser: null,
                  feedBackUserId: null,
                  id: 1593270,
                  level: 'Warning',
                  message:
                    '推测 "<span style="color:red">liangzhiyu.lzy@alipay.com</span>" 是邮件地址，可能导致信息泄露<div><span>[【标为确认】](https://codeinsightapi.alipay.com/api/v1/review?review=Confirm&fingerprint=f8307ccf9b49aaa50e990c20448fdf75815f0bed&report_id=123011035610&scan_record_id=68810564&__codeinsight_body_salt__=VDM2B_IpFhAj7HKgM_w38g&__codeinsight_body_signature__=efbda3ee71474f134a22ceb3d8b8730ef8094a43f06f8cf18def89d39d529f49)</span><span>[【标为忽略】](https://codeinsightapi.alipay.com/api/v1/review?review=Ignore&fingerprint=f8307ccf9b49aaa50e990c20448fdf75815f0bed&report_id=123011035610&scan_record_id=68810564&__codeinsight_body_salt__=bcoEIVhcVmBDQvBKWVh6_A&__codeinsight_body_signature__=76017fdbf1dc42ee743cdb640c8ad1b5d826a99cc7642d4006bdb4c069925a03)</span><span>[【标为误报】](https://codeinsightapi.alipay.com/api/v1/review?review=FalsePositive&fingerprint=f8307ccf9b49aaa50e990c20448fdf75815f0bed&report_id=123011035610&scan_record_id=68810564&__codeinsight_body_salt__=OTmqTmB5XcEwy69bgu33XA&__codeinsight_body_signature__=714b9ed74812214efe582e1bb561b7727a05b1b24b9df437bd5c9c346525d280)</span></div>',
                  path: 'src/mock/blame-list.ts',
                  startCol: 0,
                  startLine: 27,
                  title: '源文件硬编码邮箱地址',
                },
                {
                  bugId: null,
                  bugType: null,
                  bugTypeName: null,
                  checkRunId: 6859915,
                  details: '发现邮件地址',
                  endCol: 0,
                  endLine: 83,
                  feedBackStatus: 'Init',
                  feedBackUser: null,
                  feedBackUserId: null,
                  id: 1593271,
                  level: 'Warning',
                  message:
                    '推测 "<span style="color:red">liangzhiyu.lzy@alipay.com</span>" 是邮件地址，可能导致信息泄露<div><span>[【标为确认】](https://codeinsightapi.alipay.com/api/v1/review?review=Confirm&fingerprint=f8307ccf9b49aaa50e990c20448fdf75815f0bed&report_id=123011035610&scan_record_id=68810564&__codeinsight_body_salt__=IMG0RaPgOm23QeTSP3lH8A&__codeinsight_body_signature__=0045f967b5c714dfc66ad7486334cac94cc5e300f5a7fae1d11d655a664bff15)</span><span>[【标为忽略】](https://codeinsightapi.alipay.com/api/v1/review?review=Ignore&fingerprint=f8307ccf9b49aaa50e990c20448fdf75815f0bed&report_id=123011035610&scan_record_id=68810564&__codeinsight_body_salt__=A5-29WnRWQjZT1Z2AfDOBQ&__codeinsight_body_signature__=918c477f86e003b78836729d7be9fcbdf24e1c7e348ee62df78e25e221d8c65a)</span><span>[【标为误报】](https://codeinsightapi.alipay.com/api/v1/review?review=FalsePositive&fingerprint=f8307ccf9b49aaa50e990c20448fdf75815f0bed&report_id=123011035610&scan_record_id=68810564&__codeinsight_body_salt__=1nXvNoQ-6uvlF-z09tYX_A&__codeinsight_body_signature__=9ef3437fee3173e27904ba46bd1071c502f10aac84b87e0a6e5cac545c3676ee)</span></div>',
                  path: 'src/mock/blame-list.ts',
                  startCol: 0,
                  startLine: 83,
                  title: '源文件硬编码邮箱地址',
                },
              ],
              completedAt: '2021-06-10T11:55:28+0800',
              context:
                '<span style="color: rgb(251, 103, 58);">🔴 失败</span>: 0 <span style="color: rgb(250, 140, 22);"> 🟠️ 警告</span>: 10 <span style="color: rgb(250, 173, 20);"> ⚪ 通知</span>: 0\n\n已扫描项:\n- 源文件硬编码邮箱地址 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: green;">完成</span>, 发现10个警告级别风险&nbsp;&nbsp;\n\n\n[**查看结果**](https://ide.alipay.com/alex/code-insight/sarif?project=yxy167584%2Feditor-plugin-blame&commit=3a5fe8b385bab8b88518497ef1cb578de129af8e&reportId=123011035610&status=New&status=Leftover&status=Unknown&review=Unknown&review=Confirm)',
              createdAt: '2021-06-10T11:54:58+0800',
              detailUrl: '',
              externalId: '123011035610',
              id: 6859915,
              startedAt: '2021-06-10T11:54:57+0800',
              status: 'success',
              suiteId: 6641835,
              summary: 'CodeInsight 源代码扫描执行成功，发现 10 个结果',
              title: 'pinpoint checkrun',
              updateAt: '2021-06-10T11:55:28+0800',
            },
          ],
          service: {
            accessLevel: 20,
            active: true,
            avatarUrl: '/uploads/service/avatar/5/27973167.jpg',
            checks: true,
            checksDependOn: null,
            description:
              '提供自动化代码扫描检测方案，比如蚂蚁军规、代码明文账密等，并支持用户自定义等。',
            helpUrl: null,
            homepage: 'https://codeinsightapi.alipay.com',
            id: 5,
            name: 'CodeInsight',
            nameShow: '代码规范扫描',
            rerunForRun: false,
            rerunForSuite: true,
            serviceType: 'BASICQUALITY',
            stuck: false,
          },
        },
      },
    ];
  },
  getOneComment() {
    return {
      author: {
        avatarUrl: 'https://work.antfinancial-corp.com/photo/80222.80x80.jpg',
        email: 'xinglong.wangwxl@antgroup.com',
        externUid: '80222',
        id: 15168,
        name: '蛋总',
        state: 'active',
        username: 'xinglong.wangwxl',
        webUrl: 'https://work.antfinancial-corp.com/nwpipe/u/80222',
      },
      commitId: null,
      createdAt: '2021-11-04T15:08:12+0800',
      discussionId: null,
      id: 400003,
      isAward: false,
      labels: [],
      lineCode: 'c17950853d6b9677e9822cf07f2616db7ca02797_388_384',
      lineType: 'old',
      note: '111 \n\n\n![image.png](/ide-s/TypeScript-Node-Starter/uploads/cd8f399b2c994d01b4afe179c26e5a4f/image.png)\n',
      noteableId: 4200244,
      noteableType: 'ReviewComment',
      outdated: false,
      path: 'src/controllers/user.ts',
      resolvedAt: null,
      resolvedBy: null,
      stDiff: {
        aMode: '100644',
        addLineNum: 265,
        bMode: '100644',
        binaryFile: false,
        charsetName: 'UTF-8',
        commitSha: 'ab32441adfd6c3c381457717a42f19a7fdd6d59b',
        compareDiffId: 31918,
        delLineNum: 265,
        deletedFile: false,
        diff: '@@ -327,62 +327,62 @@ export const getForgot = (req: Request, res: Response) => {\n  * Create a random token, then the send user an email with a reset link.\n  */\n export const postForgot = async (req: Request, res: Response, next: NextFunction) => {\n-    await check("email", "Please enter a valid email address.").isEmail().run(req);\n-    // eslint-disable-next-line @typescript-eslint/camelcase\n-    await sanitize("email").normalizeEmail({ gmail_remove_dots: false }).run(req);\n-\n-    const errors = validationResult(req);\n-\n-    if (!errors.isEmpty()) {\n-        req.flash("errors", errors.array());\n-        return res.redirect("/forgot");\n-    }\n-\n-    async.waterfall([\n-        function createRandomToken(done: Function) {\n-            crypto.randomBytes(16, (err, buf) => {\n-                const token = buf.toString("hex");\n-                done(err, token);\n-            });\n-        },\n-        function setRandomToken(token: AuthToken, done: Function) {\n-            User.findOne({ email: req.body.email }, (err, user: any) => {\n-                if (err) { return done(err); }\n-                if (!user) {\n-                    req.flash("errors", { msg: "Account with that email address does not exist." });\n-                    return res.redirect("/forgot");\n-                }\n-                user.passwordResetToken = token;\n-                user.passwordResetExpires = Date.now() + 3600000; // 1 hour\n-                user.save((err: WriteError) => {\n-                    done(err, token, user);\n-                });\n-            });\n-        },\n-        function sendForgotPasswordEmail(token: AuthToken, user: UserDocument, done: Function) {\n-            const transporter = nodemailer.createTransport({\n-                service: "SendGrid",\n-                auth: {\n-                    user: process.env.SENDGRID_USER,\n-                    pass: process.env.SENDGRID_PASSWORD\n-                }\n-            });\n-            const mailOptions = {\n-                to: user.email,\n-                from: "hackathon@starter.com",\n-                subject: "Reset your password on Hackathon Starter",\n-                text: `You are receiving this email because you (or someone else) have requested the reset of the password for your account.\\n\\n\n+  await check("email", "Please enter a valid email address.").isEmail().run(req);\n+  // eslint-disable-next-line @typescript-eslint/camelcase\n+  await sanitize("email").normalizeEmail({ gmail_remove_dots: false }).run(req);\n+\n+  const errors = validationResult(req);\n+\n+  if (!errors.isEmpty()) {\n+    req.flash("errors", errors.array());\n+    return res.redirect("/forgot");\n+  }\n+\n+  async.waterfall([\n+    function createRandomToken(done: Function) {\n+      crypto.randomBytes(16, (err, buf) => {\n+        const token = buf.toString("hex");\n+        done(err, token);\n+      });\n+    },\n+    function setRandomToken(token: AuthToken, done: Function) {\n+      User.findOne({ email: req.body.email }, (err, user: any) => {\n+        if (err) { return done(err); }\n+        if (!user) {\n+          req.flash("errors", { msg: "Account with that email address does not exist." });\n+          return res.redirect("/forgot");\n+        }\n+        user.passwordResetToken = token;\n+        user.passwordResetExpires = Date.now() + 3600000; // 1 hour\n+        user.save((err: WriteError) => {\n+          done(err, token, user);\n+        });\n+      });\n+    },\n+    function sendForgotPasswordEmail(token: AuthToken, user: UserDocument, done: Function) {\n+      const transporter = nodemailer.createTransport({\n+        service: "SendGrid",\n+        auth: {\n+          user: process.env.SENDGRID_USER,\n+          pass: process.env.SENDGRID_PASSWORD\n+        }\n+      });\n+      const mailOptions = {\n+        to: user.email,\n+        from: "hackathon@starter.com",\n+        subject: "Reset your password on Hackathon Starter",\n+        text: `You are receiving this email because you (or someone else) have requested the reset of the password for your account.\\n\\n\n           Please click on the following link, or paste this into your browser to complete the process:\\n\\n\n           http://${req.headers.host}/reset/${token}\\n\\n\n           If you did not request this, please ignore this email and your password will remain unchanged.\\n`\n-            };\n-            transporter.sendMail(mailOptions, (err) => {\n-                req.flash("info", { msg: `An e-mail has been sent to ${user.email} with further instructions.` });\n-                done(err);\n-            });\n-        }\n-    ], (err) => {\n-        if (err) { return next(err); }\n-        res.redirect("/forgot");\n-    });\n+      };\n+      transporter.sendMail(mailOptions, (err) => {\n+        req.flash("info", { msg: `An e-mail has been sent to ${user.email} with further instructions.` });\n+        done(err);\n+      });\n+    }\n+  ], (err) => {\n+    if (err) { return next(err); }\n+    res.redirect("/forgot");\n+  });\n };\n',
        id: 1088,
        newFile: false,
        newPath: 'src/controllers/user.ts',
        oldPath: 'src/controllers/user.ts',
        renamedFile: false,
        tooLarge: false,
      },
      state: 'opened',
      system: false,
      type: 'Problem',
      updatedAt: '2021-11-04T15:08:12+0800',
      noteId: 400003,
    };
  },
};
